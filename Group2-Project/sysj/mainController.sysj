mainController(
	input signal conveyorDone, rotaryDone, capperDone, fillerDone, loaderDone, unloaderDone, getBottle, tick;
    output signal conveyorEnable, rotaryEnable, capperEnable, fillerEnable;
    
    //from request button
    input signal bottleAtLoad;
    
    //from rotaryController
    input signal NbottleLeft5, NbottlePos2, NbottlePos4;
    
    //to loader/unloader
    output signal bottleToLoad, bottleToUnload;
    
    //to visualiser
    output signal bottleAtLoadS;
	)
->{
	//Loader/Unloader Control
	signal bottleWaitAtLoad;
	signal bottleWaitAtEnd;
	{
		while(true){
			await(!bottleAtLoad);
			await(bottleAtLoad);
			abort(!bottleToLoad){
				sustain bottleWaitAtLoad;
			}
		}
	}
	||
	{
		while(true){
			await(bottleWaitAtLoad);
			
			await(!loaderDone);
			abort(loaderDone){
				sustain bottleToLoad;
			}
		}
	}
	||
	{
		while(true){
			await(!NbottleLeft5);
			await(NbottleLeft5);
			abort(!bottleToUnload){
				sustain bottleWaitAtEnd;
			}
		}
	}
	||
	{
		while(true){
			await(bottleWaitAtEnd);
			
			await(!unloaderDone);
			abort(unloaderDone){
				sustain bottleToUnload;
			}
		}
	}
	||
	
	//Capper Control
	{
		while(true){
			await(!NbottlePos4);
			await(NbottlePos4);
			abort(capperDone){
				sustain capperEnable;
			}
		}
	}
	||
	
	//Filler Control
	{
		while(true){
			await(!NbottlePos2);
			await(NbottlePos2);
			abort(fillerDone){
				sustain fillerEnable;
			}
		}
	}
	||
	
	//Rotary Control
	{
		while(true){
			await(!capperEnable);
			abort(capperEnable){
				sustain rotaryEnable;
			}
		}
	}
	||
	
	//To Visualiser
	{
		while(true){
			await(bottleAtLoad);
			abort(getBottle){
				sustain bottleAtLoadS;
			}
		}
	}
}