fillerController(
    input signal canBottom, canTop, fillerEnable, tick, toFill1, toFill2, toFill3, toFill4;
    output signal inletOn, injectorOn, valveRetract, valveExtend, fillerDone, fill1, fill2, fill3, fill4;
)

->{	signal stop, fill;
	{
		while(true){
			await(fill);
			await(toFill1);
			{abort(stop){
				sustain fill1;
			}
			}
			||
			{
				waitl(2000 ms);
				emit stop;
			}
		}
	}
	||
	{
		while(true){
			await(fill);
			await(toFill2);
			{abort(stop){
				sustain fill2;
			}
			}
			||
			{
				waitl(2000 ms);
				emit stop;
			}
		}
	}
	||
	{
		while(true){
			await(fill);
			await(toFill3);
			{abort(stop){
				sustain fill3;
			}
			}
			||
			{
				waitl(2000 ms);
				emit stop;
			}
		}
	}
	||
	{
		while(true){
			await(fill);
			await(toFill4);
			{abort(stop){
				sustain fill4;
			}
			}
			||
			{
				waitl(2000 ms);
				emit stop;
			}
		}
	}
	||
	{
		await(tick);
		await(!tick);
		await(fill);
		await(!fill);
		await(fill);
		await(!fill);
		await(fill);
		await(!fill);
		await(fill);
		await(!fill);
		abort(!fillerEnable) {
			sustain fillerDone;
		}
	}
	||
	{
	await(tick);
		while(true){
			await(fillerEnable);
			abort(canTop) {
				{sustain injectorOn;}
				||
				{present (canBottom) {
				pause;
					sustain valveRetract;
					pause;
				}
				}
			}
			System.out.println("select a liquid");
			abort(stop){
				sustain fill;
			}
			abort(canBottom) {
				{sustain inletOn;}
				||
				{sustain valveExtend;}	
			}
		}
	}
}