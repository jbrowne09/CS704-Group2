rotaryPlant(
		input signal rotate, tick;
		
		//adjusted plant signals (think we can dump capPos1)
		output signal bottlePos1, bottlePos2, bottlePos3, bottlePos4, bottlePos5, aligned;
		
		//adjusted viz signals
		output signal bottlePos1S, bottlePos2S, bottlePos3S, bottlePos4S, bottlePos5S, rotateS;
		)
->{	
	//Early version, ONE bottle at a time only
	{
		while(true){
			
			await(!tick);
			await(tick);
			
			await(!tick);
			abort(tick) {
				while(true){
					emit aligned;
					emit bottlePos1;
					pause;
				}
			}
			
			await(!tick);
			await(tick);
			
			await(!tick);
			abort(tick) {
				while(true){
					emit aligned;
					emit bottlePos2;
					pause;
				}
			}
			
			await(!tick);
			await(tick);
			
			await(!tick);
			abort(tick) {
				while(true){
					emit aligned;
					emit bottlePos3;
					pause;
				}
			}
			
			await(!tick);
			await(tick);
			
			await(!tick);
			abort(tick) {
				while(true){
					emit aligned;
					emit bottlePos4;
					pause;
				}
			}
			
			await(!tick);
			await(tick);
			
			await(!tick);
			abort(tick) {
				while(true){
					emit aligned;
					emit bottlePos5;
					pause;
				}
			}
		}
	}
	||
	{//To Viz
		{ while(true) { present (bottlePos1) {emit bottlePos1S;} pause;}}
		||
		{ while(true) { present (bottlePos2) {emit bottlePos2S;} pause;}}
		||
		{ while(true) { present (bottlePos3) {emit bottlePos3S;} pause;}}
		||
		{ while(true) { present (bottlePos4) {emit bottlePos4S;} pause;}}
		||
		{ while(true) { present (bottlePos5) {emit bottlePos5S;} pause;}}
		||
		{ while(true) { present (rotate) {emit rotateS;} pause;}}
	}
	||
	{//tick status (for debug)
		while(true) {
			await(tick);
			//System.out.println("tick");
			await(!tick);
		}
	}
}