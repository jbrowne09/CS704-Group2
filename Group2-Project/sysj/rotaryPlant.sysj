rotaryPlant(
	//input from controller
	input signal rotate, tick;
		
	//input signals from conveyor plant
	input signal NbottlePos1, Nmotor, NbottleLeft5;
		
	//output signals to rotaryController
	output signal bottlePos1, bottlePos2, bottlePos3, bottlePos4, bottlePos5, aligned;
	
	//output to conveyor plant
	output signal NbottlePos5;
		
	//viz signals
	output signal bottlePos1S, bottlePos2S, bottlePos3S, bottlePos4S, bottlePos5S, rotateS;
	)
->{	
	//Multiple Bottles version
	{
		while(true){
			await(bottlePos1);
			System.out.println("I SEE POS1");		
			await(tick);
			
			await(!tick);
			abort(rotate){
				sustain bottlePos2;
			}
		}
	}
	||
	{
		while(true){
			await(bottlePos2);
			await(tick);
			
			await(!tick);
			abort(rotate){
				sustain bottlePos3;
			}
		}
	}
	||
	{
		while(true){
			await(bottlePos3);
			await(tick);
			
			await(!tick);
			abort(rotate){
				sustain bottlePos4;
			}
		}
	}
	||
	{
		while(true){
			await(bottlePos4);
			await(tick);
			
//adjust below with abort using motor signal + bottleLeft5 etc.
			await(!tick);
			abort(tick){
				sustain bottlePos5;
			}
		}
	}
	||
	{
		while(true){
			abort(rotate){
				sustain aligned;
			}
			
			abort(tick && rotate){
				halt;
			}
			
			abort(!rotate){
				sustain aligned;
			}
		}
	}
	||
	{//To Viz/Other plants
		{ while(true) { present (bottlePos1) {emit bottlePos1S;} pause;}}
		||
		{ while(true) { present (bottlePos2) {emit bottlePos2S;} pause;}}
		||
		{ while(true) { present (bottlePos3) {emit bottlePos3S;} pause;}}
		||
		{ while(true) { present (bottlePos4) {emit bottlePos4S;} pause;}}
		||
		{ while(true) { present (bottlePos5) {emit bottlePos5S;} pause;}}
		||
		{ while(true) { present (rotate) {emit rotateS;} pause;}}
		||
		{ while(true) { present (bottlePos5) {emit NbottlePos5;} pause;}}
		
		//input from other plants
		{ while(true) { present (NbottlePos1) {emit bottlePos1;} pause;}}
	}
	||
	{
		while(true){
			await(tick);
			//System.out.println("tick");
			await(!tick);
		}
	}
}