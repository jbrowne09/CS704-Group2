conveyorController(
    
    //Plant to Controller
    input signal bottleLeft5, bottlePos1, loaderDone; //loaderDone is temporary for testing
    
    //Main to Controller
    input signal conveyorEnable;
    
    //From RotaryController
    input signal NbottlePos5;
    
    //To RotaryController
    output signal NbottlePos1, Nmotor;
    
    //Controller to Plant
    output signal motor, CbottlePos5;
	)
->{
	//Conveyor Control
	//Currently ignoring loaderDone signal
	{
		while(true){
			await(loaderDone);
			
			abort(!bottlePos1 && !bottleLeft5){
				halt;
			}
				
			abort(bottlePos1){
				sustain motor;
			}
		}
	}
	||
	{
		while(true){
			await(NbottlePos5);
			
			abort(!bottlePos1 && !bottleLeft5){
				halt;
			}
			
			abort(bottleLeft5){
				sustain motor;
			}
		}
	}
	||
	
	//signals to/from rotaryController
	{ while(true) { present (NbottlePos5) {emit CbottlePos5;} pause;}}
	||
	{ while(true) { present (bottlePos1) {emit NbottlePos1;} pause;}}
	||
	{ while(true) { present (motor) {emit Nmotor;} pause;}}
}